name: Continuous delivery - Linux

on:
  release:
    types: [prereleased, released]

jobs:
  version-check:
    name: Check versioning
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install required packages
        run: |
          apt update
          apt install -y python3-poetry
      - name: Create virtual environment
        run: make init
      - name: Check version tag format
        shell: bash
        run: |
          VERSION_TAG="${{ github.event.release.tag_name }}"
          if [[ $VERSION_TAG =~ ^v[0-9]+.[0-9]+.[0-9]+$ ]]; then exit 0; else exit 1; fi
      - name: Check if version tag and package version are equal
        shell: bash
        run: |
          VERSION_TAG="${{ github.event.release.tag_name }}"
          PACKAGE_VERSION="v"$($(poetry env info --path)/bin/python -c "from nitrokeyapp import __version__; print(__version__)")
          if [ $VERSION_TAG == $PACKAGE_VERSION ]; then exit 0; else exit 1; fi
  build-onefile:
    name: Build onefile
    runs-on: ubuntu-latest
    container: python:3.9-slim
    needs: version-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install required packages
        run: |
          apt update
          apt install -y binutils gcc libglib2.0-dev libpcsclite-dev libusb-1.0-0 make python3-poetry swig
      - name: Create virtual environment
        run: poetry install
      - name: Build
        run: make build-pyinstaller-onefile
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nitrokey-app-onefile
          path: dist/nitrokey-app
  publish-binary:
    name: Publish binary
    runs-on: ubuntu-latest
    container: python:3.9-slim
    needs: build-onefile
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: nitrokey-app-onefile
      - name: Rename binary
        run: |
          mv \
            nitrokey-app \
            nitrokey-app-${{ github.event.release.tag_name }}-x64-linux-binary
      - name: Create archive
        run: |
          tar \
          -czvf \
          nitrokey-app-${{ github.event.release.tag_name }}-x64-linux-binary.tar.gz \
          nitrokey-app-${{ github.event.release.tag_name }}-x64-linux-binary
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: nitrokey-app-${{ github.event.release.tag_name }}-x64-linux-binary.tar.gz