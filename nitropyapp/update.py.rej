diff a/nitropyapp/update.py b/nitropyapp/update.py	(rejected hunks)
@@ -49,47 +47,47 @@ class UpdateGUI(UpdateUi):
         )
 
     def confirm_download(self, current: Optional[Version], new: Version) -> None:
-        confirm_download_msgBox = QMessageBox()
-        confirm_download_msgBox.setIcon(QMessageBox.Information)
+        confirm_download_msgBox = QtWidgets.QMessageBox()
+        confirm_download_msgBox.setIcon(QtWidgets.QMessageBox.Information)
         confirm_download_msgBox.setText(f"Do you want to download the firmware version {new}?")
         confirm_download_msgBox.setWindowTitle("Nitrokey 3 Firmware Update")
-        confirm_download_msgBox.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
+        confirm_download_msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
         returnValue = confirm_download_msgBox.exec()
-        if returnValue == QMessageBox.Cancel:
+        if returnValue == QtWidgets.QMessageBox.Cancel:
             print('Cancel clicked')
             logger.info("Firmware Download cancelled by user in the second dialog")
             raise self.abort("Update cancelled by user in the second dialog")
-        elif returnValue == QMessageBox.Ok:
+        elif returnValue == QtWidgets.QMessageBox.Ok:
             print('OK clicked')
 
     def confirm_update(self, current: Optional[Version], new: Version) -> None:
-        confirm_update_msgBox = QMessageBox()
-        confirm_update_msgBox.setIcon(QMessageBox.Information)
+        confirm_update_msgBox = QtWidgets.QMessageBox()
+        confirm_update_msgBox.setIcon(QtWidgets.QMessageBox.Information)
         confirm_update_msgBox.setText("Please do not remove the Nitrokey 3 or insert any other Nitrokey 3 devices during the update. Doing so may damage the Nitrokey 3. Do you want to perform the firmware update now?")
         confirm_update_msgBox.setWindowTitle("Nitrokey 3 Firmware Update")
-        confirm_update_msgBox.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
+        confirm_update_msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
         returnValue = confirm_update_msgBox.exec()
-        if returnValue == QMessageBox.Cancel:
+        if returnValue == QtWidgets.QMessageBox.Cancel:
             print('Cancel clicked')
             logger.info("Update cancelled by user in the third dialog")
             raise self.abort("Update cancelled by user in the third dialog")
-        elif returnValue == QMessageBox.Ok:
+        elif returnValue == QtWidgets.QMessageBox.Ok:
             print('OK clicked')
             TrayNotification("Nitrokey 3", "Nitrokey 3 Firmware Update", "Please touch your Nitrokey 3 Device")
 
     def confirm_update_same_version(self, version: Version) -> None:
-        confirm_update_same_version_msgBox = QMessageBox()
-        confirm_update_same_version_msgBox.setIcon(QMessageBox.Information)
+        confirm_update_same_version_msgBox = QtWidgets.QMessageBox()
+        confirm_update_same_version_msgBox.setIcon(QtWidgets.QMessageBox.Information)
         confirm_update_same_version_msgBox.setText("The version of the firmware image is the same as on the device. Do you want to continue anyway?")
         confirm_update_same_version_msgBox.setWindowTitle("Nitrokey 3 Firmware Update")
-        confirm_update_same_version_msgBox.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
+        confirm_update_same_version_msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
         returnValue = confirm_update_same_version_msgBox.exec()
-        if returnValue == QMessageBox.Cancel:
+        if returnValue == QtWidgets.QMessageBox.Cancel:
             print('Cancel clicked')
             logger.info("Update cancelled by user in the first dialog")
             #raise Abort()
             raise self.abort("Update cancelled by user in the first dialog")
-        elif returnValue == QMessageBox.Ok:
+        elif returnValue == QtWidgets.QMessageBox.Ok:
             print('OK clicked')
 
     def request_repeated_update(self) -> Exception:
