# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'nitrokeyapp/ui/stick20hiddenvolumedialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_stick20HiddenVolumeDialog(object):
    def setupUi(self, stick20HiddenVolumeDialog):
        stick20HiddenVolumeDialog.setObjectName("stick20HiddenVolumeDialog")
        stick20HiddenVolumeDialog.resize(525, 668)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(stick20HiddenVolumeDialog.sizePolicy().hasHeightForWidth())
        stick20HiddenVolumeDialog.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/new/icon_NK.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        stick20HiddenVolumeDialog.setWindowIcon(icon)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(stick20HiddenVolumeDialog)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.main_frame = QtWidgets.QFrame(stick20HiddenVolumeDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_frame.sizePolicy().hasHeightForWidth())
        self.main_frame.setSizePolicy(sizePolicy)
        self.main_frame.setAutoFillBackground(False)
        self.main_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.main_frame.setObjectName("main_frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.main_frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.top_layout = QtWidgets.QHBoxLayout()
        self.top_layout.setObjectName("top_layout")
        self.l_warning = QtWidgets.QLabel(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_warning.sizePolicy().hasHeightForWidth())
        self.l_warning.setSizePolicy(sizePolicy)
        self.l_warning.setMinimumSize(QtCore.QSize(66, 58))
        self.l_warning.setMaximumSize(QtCore.QSize(66, 58))
        self.l_warning.setBaseSize(QtCore.QSize(66, 58))
        self.l_warning.setText("")
        self.l_warning.setPixmap(QtGui.QPixmap(":/images/warning.png"))
        self.l_warning.setObjectName("l_warning")
        self.top_layout.addWidget(self.l_warning)
        self.l_top_instructions = QtWidgets.QLabel(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_top_instructions.sizePolicy().hasHeightForWidth())
        self.l_top_instructions.setSizePolicy(sizePolicy)
        self.l_top_instructions.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.l_top_instructions.setScaledContents(False)
        self.l_top_instructions.setWordWrap(True)
        self.l_top_instructions.setOpenExternalLinks(True)
        self.l_top_instructions.setObjectName("l_top_instructions")
        self.top_layout.addWidget(self.l_top_instructions)
        self.verticalLayout_2.addLayout(self.top_layout)
        self.l_instructions = QtWidgets.QLabel(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_instructions.sizePolicy().hasHeightForWidth())
        self.l_instructions.setSizePolicy(sizePolicy)
        self.l_instructions.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.l_instructions.setWordWrap(True)
        self.l_instructions.setObjectName("l_instructions")
        self.verticalLayout_2.addWidget(self.l_instructions)
        self.password_group = QtWidgets.QGroupBox(self.main_frame)
        self.password_group.setObjectName("password_group")
        self.passwordObjects = QtWidgets.QFormLayout(self.password_group)
        self.passwordObjects.setObjectName("passwordObjects")
        self.label = QtWidgets.QLabel(self.password_group)
        self.label.setObjectName("label")
        self.passwordObjects.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.HVPasswordEdit = QtWidgets.QLineEdit(self.password_group)
        self.HVPasswordEdit.setText("12345678901234567890")
        self.HVPasswordEdit.setMaxLength(20)
        self.HVPasswordEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.HVPasswordEdit.setObjectName("HVPasswordEdit")
        self.passwordObjects.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.HVPasswordEdit)
        self.label_4 = QtWidgets.QLabel(self.password_group)
        self.label_4.setObjectName("label_4")
        self.passwordObjects.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.HVPasswordEdit_2 = QtWidgets.QLineEdit(self.password_group)
        self.HVPasswordEdit_2.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.HVPasswordEdit_2.setText("12345678901234567890")
        self.HVPasswordEdit_2.setMaxLength(20)
        self.HVPasswordEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.HVPasswordEdit_2.setObjectName("HVPasswordEdit_2")
        self.passwordObjects.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.HVPasswordEdit_2)
        self.ShowPasswordCheckBox = QtWidgets.QCheckBox(self.password_group)
        self.ShowPasswordCheckBox.setObjectName("ShowPasswordCheckBox")
        self.passwordObjects.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.ShowPasswordCheckBox)
        self.entropy_verticalLayout = QtWidgets.QVBoxLayout()
        self.entropy_verticalLayout.setObjectName("entropy_verticalLayout")
        self.label_6 = QtWidgets.QLabel(self.password_group)
        self.label_6.setObjectName("label_6")
        self.entropy_verticalLayout.addWidget(self.label_6)
        self.password_strength_progressBar = QtWidgets.QProgressBar(self.password_group)
        self.password_strength_progressBar.setProperty("value", 42)
        self.password_strength_progressBar.setObjectName("password_strength_progressBar")
        self.entropy_verticalLayout.addWidget(self.password_strength_progressBar)
        self.chars_kind_layout = QtWidgets.QHBoxLayout()
        self.chars_kind_layout.setObjectName("chars_kind_layout")
        self.cb_length = QtWidgets.QCheckBox(self.password_group)
        self.cb_length.setEnabled(False)
        self.cb_length.setFocusPolicy(QtCore.Qt.NoFocus)
        self.cb_length.setObjectName("cb_length")
        self.chars_kind_layout.addWidget(self.cb_length)
        self.cb_lower_case = QtWidgets.QCheckBox(self.password_group)
        self.cb_lower_case.setEnabled(False)
        self.cb_lower_case.setFocusPolicy(QtCore.Qt.NoFocus)
        self.cb_lower_case.setObjectName("cb_lower_case")
        self.chars_kind_layout.addWidget(self.cb_lower_case)
        self.cb_upper_case = QtWidgets.QCheckBox(self.password_group)
        self.cb_upper_case.setEnabled(False)
        self.cb_upper_case.setFocusPolicy(QtCore.Qt.NoFocus)
        self.cb_upper_case.setCheckable(True)
        self.cb_upper_case.setObjectName("cb_upper_case")
        self.chars_kind_layout.addWidget(self.cb_upper_case)
        self.cb_numbers = QtWidgets.QCheckBox(self.password_group)
        self.cb_numbers.setEnabled(False)
        self.cb_numbers.setFocusPolicy(QtCore.Qt.NoFocus)
        self.cb_numbers.setObjectName("cb_numbers")
        self.chars_kind_layout.addWidget(self.cb_numbers)
        self.cb_symbols = QtWidgets.QCheckBox(self.password_group)
        self.cb_symbols.setEnabled(False)
        self.cb_symbols.setFocusPolicy(QtCore.Qt.NoFocus)
        self.cb_symbols.setObjectName("cb_symbols")
        self.chars_kind_layout.addWidget(self.cb_symbols)
        self.entropy_verticalLayout.addLayout(self.chars_kind_layout)
        self.passwordObjects.setLayout(3, QtWidgets.QFormLayout.SpanningRole, self.entropy_verticalLayout)
        self.verticalLayout_2.addWidget(self.password_group)
        self.HV_settings_groupBox = QtWidgets.QGroupBox(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.HV_settings_groupBox.sizePolicy().hasHeightForWidth())
        self.HV_settings_groupBox.setSizePolicy(sizePolicy)
        self.HV_settings_groupBox.setMinimumSize(QtCore.QSize(100, 101))
        self.HV_settings_groupBox.setCheckable(False)
        self.HV_settings_groupBox.setObjectName("HV_settings_groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.HV_settings_groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalFrame = QtWidgets.QFrame(self.HV_settings_groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.verticalFrame.sizePolicy().hasHeightForWidth())
        self.verticalFrame.setSizePolicy(sizePolicy)
        self.verticalFrame.setObjectName("verticalFrame")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalFrame)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.comboBox = QtWidgets.QComboBox(self.verticalFrame)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout_6.addWidget(self.comboBox)
        self.HVSdCardHighWaterMark = QtWidgets.QLabel(self.verticalFrame)
        self.HVSdCardHighWaterMark.setText("SD card information")
        self.HVSdCardHighWaterMark.setAlignment(QtCore.Qt.AlignCenter)
        self.HVSdCardHighWaterMark.setObjectName("HVSdCardHighWaterMark")
        self.verticalLayout_6.addWidget(self.HVSdCardHighWaterMark)
        self.rd_frame = QtWidgets.QFrame(self.verticalFrame)
        self.rd_frame.setFrameShape(QtWidgets.QFrame.Box)
        self.rd_frame.setObjectName("rd_frame")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.rd_frame)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.l_sd_size = QtWidgets.QLabel(self.rd_frame)
        self.l_sd_size.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.l_sd_size.setText("Storage capacity: %1GB")
        self.l_sd_size.setObjectName("l_sd_size")
        self.horizontalLayout_5.addWidget(self.l_sd_size)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        self.label_5 = QtWidgets.QLabel(self.rd_frame)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        self.rd_percent = QtWidgets.QRadioButton(self.rd_frame)
        self.rd_percent.setAccessibleName("")
        self.rd_percent.setObjectName("rd_percent")
        self.horizontalLayout_5.addWidget(self.rd_percent)
        self.rd_MB = QtWidgets.QRadioButton(self.rd_frame)
        self.rd_MB.setObjectName("rd_MB")
        self.horizontalLayout_5.addWidget(self.rd_MB)
        self.rd_GB = QtWidgets.QRadioButton(self.rd_frame)
        self.rd_GB.setObjectName("rd_GB")
        self.horizontalLayout_5.addWidget(self.rd_GB)
        self.verticalLayout_6.addWidget(self.rd_frame)
        self.StartControls = QtWidgets.QHBoxLayout()
        self.StartControls.setObjectName("StartControls")
        self.l_sd_start = QtWidgets.QLabel(self.verticalFrame)
        self.l_sd_start.setText("Start at %1 of SD size:")
        self.l_sd_start.setObjectName("l_sd_start")
        self.StartControls.addWidget(self.l_sd_start)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.StartControls.addItem(spacerItem1)
        self.StartBlockSpin = QtWidgets.QDoubleSpinBox(self.verticalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.StartBlockSpin.sizePolicy().hasHeightForWidth())
        self.StartBlockSpin.setSizePolicy(sizePolicy)
        self.StartBlockSpin.setAccessibleName("")
        self.StartBlockSpin.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.StartBlockSpin.setMaximum(1e+24)
        self.StartBlockSpin.setObjectName("StartBlockSpin")
        self.StartControls.addWidget(self.StartBlockSpin)
        self.verticalLayout_6.addLayout(self.StartControls)
        self.StopControls = QtWidgets.QHBoxLayout()
        self.StopControls.setObjectName("StopControls")
        self.l_sd_end = QtWidgets.QLabel(self.verticalFrame)
        self.l_sd_end.setText("End at %1 of SD size:")
        self.l_sd_end.setObjectName("l_sd_end")
        self.StopControls.addWidget(self.l_sd_end)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.StopControls.addItem(spacerItem2)
        self.EndBlockSpin = QtWidgets.QDoubleSpinBox(self.verticalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EndBlockSpin.sizePolicy().hasHeightForWidth())
        self.EndBlockSpin.setSizePolicy(sizePolicy)
        self.EndBlockSpin.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.EndBlockSpin.setMaximum(1e+38)
        self.EndBlockSpin.setObjectName("EndBlockSpin")
        self.StopControls.addWidget(self.EndBlockSpin)
        self.verticalLayout_6.addLayout(self.StopControls)
        self.l_rounding_info = QtWidgets.QLabel(self.verticalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.l_rounding_info.sizePolicy().hasHeightForWidth())
        self.l_rounding_info.setSizePolicy(sizePolicy)
        self.l_rounding_info.setMinimumSize(QtCore.QSize(0, 0))
        self.l_rounding_info.setObjectName("l_rounding_info")
        self.verticalLayout_6.addWidget(self.l_rounding_info)
        self.gridLayout.addWidget(self.verticalFrame, 0, 0, 1, 1)
        self.verticalLayout_2.addWidget(self.HV_settings_groupBox)
        self.verticalLayout_4.addWidget(self.main_frame)
        self.line = QtWidgets.QFrame(stick20HiddenVolumeDialog)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_4.addWidget(self.line)
        self.bottom_buttons = QtWidgets.QHBoxLayout()
        self.bottom_buttons.setObjectName("bottom_buttons")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.bottom_buttons.addItem(spacerItem3)
        self.buttonBox = QtWidgets.QDialogButtonBox(stick20HiddenVolumeDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.bottom_buttons.addWidget(self.buttonBox)
        self.verticalLayout_4.addLayout(self.bottom_buttons)

        self.retranslateUi(stick20HiddenVolumeDialog)
        QtCore.QMetaObject.connectSlotsByName(stick20HiddenVolumeDialog)
        stick20HiddenVolumeDialog.setTabOrder(self.l_top_instructions, self.l_instructions)
        stick20HiddenVolumeDialog.setTabOrder(self.l_instructions, self.HVPasswordEdit)
        stick20HiddenVolumeDialog.setTabOrder(self.HVPasswordEdit, self.HVPasswordEdit_2)
        stick20HiddenVolumeDialog.setTabOrder(self.HVPasswordEdit_2, self.ShowPasswordCheckBox)
        stick20HiddenVolumeDialog.setTabOrder(self.ShowPasswordCheckBox, self.comboBox)
        stick20HiddenVolumeDialog.setTabOrder(self.comboBox, self.l_sd_size)
        stick20HiddenVolumeDialog.setTabOrder(self.l_sd_size, self.rd_percent)
        stick20HiddenVolumeDialog.setTabOrder(self.rd_percent, self.rd_MB)
        stick20HiddenVolumeDialog.setTabOrder(self.rd_MB, self.rd_GB)
        stick20HiddenVolumeDialog.setTabOrder(self.rd_GB, self.StartBlockSpin)
        stick20HiddenVolumeDialog.setTabOrder(self.StartBlockSpin, self.EndBlockSpin)

    def retranslateUi(self, stick20HiddenVolumeDialog):
        _translate = QtCore.QCoreApplication.translate
        stick20HiddenVolumeDialog.setWindowTitle(_translate("stick20HiddenVolumeDialog", "Setup hidden volume"))
        self.l_top_instructions.setText(_translate("stick20HiddenVolumeDialog", "<html><head/><body><p><span style=\" font-weight:600;\">You should understand the properties of hidden volumes before proceeding. It can destroy your encrypted data! <br/>Please read </span><a href=\"https://www.nitrokey.com/documentation/hidden-volumes\"><span style=\" font-weight:600; text-decoration: underline; color:#0000ff;\">these instructions</span></a><span style=\" font-weight:600;\"> first.</span></p></body></html>"))
        self.l_instructions.setText(_translate("stick20HiddenVolumeDialog", "<html><head/><body><p>1. You may want to copy some innocuous files to the encrypted data.<br/>2. Configure hidden volumes in this dialogue. <br/>3. Once you configured a hidden volume you must not use/write to the encryption volume anymore. Otherwise it may destroy the data in your hidden volume.</p></body></html>"))
        self.password_group.setTitle(_translate("stick20HiddenVolumeDialog", "Password settings"))
        self.label.setText(_translate("stick20HiddenVolumeDialog", "Password:"))
        self.HVPasswordEdit.setAccessibleName(_translate("stick20HiddenVolumeDialog", "Hidden volume password"))
        self.HVPasswordEdit.setAccessibleDescription(_translate("stick20HiddenVolumeDialog", "Please use shift+tab key shortcut for instructions"))
        self.label_4.setText(_translate("stick20HiddenVolumeDialog", "Password:"))
        self.HVPasswordEdit_2.setAccessibleName(_translate("stick20HiddenVolumeDialog", "Hidden volume password (repeated)"))
        self.ShowPasswordCheckBox.setText(_translate("stick20HiddenVolumeDialog", "Show password"))
        self.label_6.setText(_translate("stick20HiddenVolumeDialog", "Password strength:"))
        self.password_strength_progressBar.setAccessibleName(_translate("stick20HiddenVolumeDialog", "Password strength:"))
        self.cb_length.setText(_translate("stick20HiddenVolumeDialog", "length"))
        self.cb_lower_case.setText(_translate("stick20HiddenVolumeDialog", "lower case"))
        self.cb_upper_case.setText(_translate("stick20HiddenVolumeDialog", "upper case"))
        self.cb_numbers.setText(_translate("stick20HiddenVolumeDialog", "numbers"))
        self.cb_symbols.setText(_translate("stick20HiddenVolumeDialog", "symbols"))
        self.HV_settings_groupBox.setTitle(_translate("stick20HiddenVolumeDialog", "Hidden Volume settings"))
        self.comboBox.setAccessibleDescription(_translate("stick20HiddenVolumeDialog", "Slot under which hidden volume information will be stored"))
        self.comboBox.setItemText(0, _translate("stick20HiddenVolumeDialog", "Hidden volume slot 1"))
        self.comboBox.setItemText(1, _translate("stick20HiddenVolumeDialog", "Hidden volume slot 2"))
        self.comboBox.setItemText(2, _translate("stick20HiddenVolumeDialog", "Hidden volume slot 3"))
        self.comboBox.setItemText(3, _translate("stick20HiddenVolumeDialog", "Hidden volume slot 4"))
        self.label_5.setText(_translate("stick20HiddenVolumeDialog", "Unit:"))
        self.rd_percent.setAccessibleDescription(_translate("stick20HiddenVolumeDialog", "Use this as hidden volume size unit"))
        self.rd_percent.setText(_translate("stick20HiddenVolumeDialog", "%"))
        self.rd_MB.setAccessibleDescription(_translate("stick20HiddenVolumeDialog", "Use this as hidden volume size unit"))
        self.rd_MB.setText(_translate("stick20HiddenVolumeDialog", "MB"))
        self.rd_GB.setAccessibleDescription(_translate("stick20HiddenVolumeDialog", "Use this as hidden volume size unit"))
        self.rd_GB.setText(_translate("stick20HiddenVolumeDialog", "GB"))
        self.l_rounding_info.setText(_translate("stick20HiddenVolumeDialog", "Size will be rounded down to integral percent of total storage size (%1MB)"))
import resources_rc
